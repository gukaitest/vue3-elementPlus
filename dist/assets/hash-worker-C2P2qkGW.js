(function(){"use strict";globalThis.importScripts("spark-md5.min.js");function n(r,s){return new Promise(o=>{const a=[];let e=0;for(;e<r.size;)a.push({chunkFile:r.slice(e,e+s)}),e+=s;o(a)})}async function c(r){const s=new globalThis.SparkMD5.ArrayBuffer;let o=0;async function a(e){return e>=r.length?s.end():new Promise((i,h)=>{const t=new FileReader;t.readAsArrayBuffer(r[e].chunkFile),t.onload=l=>{s.append(l.target.result),o+=100/r.length,globalThis.postMessage({percentage:o}),i(a(e+1))},t.onerror=l=>{h(l)}})}try{const e=await a(0);globalThis.postMessage({percentage:100,fileHash:e,fileChunkList:r}),globalThis.close()}catch(e){globalThis.postMessage({name:"error",data:e}),globalThis.close()}}globalThis.addEventListener("message",async r=>{try{const{file:s,chunkSize:o}=r.data,a=await n(s,o);await c(a)}catch(s){console.error("worker监听发生错误:",s)}},!1),globalThis.addEventListener("error",r=>{console.log("Worker触发主线程的error事件：",r),globalThis.close()})})();
